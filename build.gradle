buildscript {
    repositories {
        mavenLocal()
        maven { 
            url "https://plugins.gradle.org/m2/" 
            mavenContent { releasesOnly() }
        }
    }
    dependencies {
        classpath "io.freefair.gradle:maven-plugin:${project.gradleMavenPluginVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://build.shibboleth.net/nexus/content/repositories/releases/" }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
        mavenContent { snapshotsOnly() }
    }
}

apply plugin: "io.freefair.war-overlay"
apply plugin: "war"
apply plugin: "org.springframework.boot"

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    implementation "org.apereo.cas:cas-server-support-swagger:${project.'cas.version'}"
    implementation "org.apereo.cas:cas-server-support-rest:${project.'cas.version'}"
}

springBoot {
    buildInfo()
    mainClass = "org.apereo.cas.web.CasWebApplication"
}

bootWar {
    archiveName "cas.war"
    baseName "cas"

    entryCompression = ZipEntryCompression.STORED
    /*
        attachClasses = true 
        classesClassifier = 'classes'
        archiveClasses = true
    */
    overlays {
        /*
            https://docs.freefair.io/gradle-plugins/current/reference/#_io_freefair_war_overlay
            Note: The "excludes" property is only for files in the war dependency.
            If a jar is excluded from the war, it could be brought back into the final war as a dependency
            of non-war dependencies. Those should be excluded via normal gradle dependency exclusions.
        */
        cas {
            from "org.apereo.cas:cas-server-webapp${project.appServer}:${project.'cas.version'}@war"
            provided = false
            /*
            excludes = ["WEB-INF/lib/somejar-1.0*"]
            enableCompilation = true
            includes = ["*.xyz"]
            targetPath = "sub-path/bar"
            skip = false
            */
        }
    }
}

war {
    enabled = false
}

task purge(type: Delete) {
  delete 'build/overlays', 'build/tmp', 'build/resources'
  followSymlinks = true
}

build.finalizedBy purge

dependencies {
    implementation group: "org.apereo.cas", name: "cas-server-webapp${project.appServer}", version: "${project.'cas.version'}", changing: true
    implementation group: "org.apereo.cas", name: "cas-server-support-json-service-registry", version: "${project.'cas.version'}", changing: true
    
    implementation group: "org.apereo.cas", name: "cas-server-support-bootadmin-client", version: "${project.'cas.version'}", changing: true
    // implementation group: "org.apereo.cas", name: "cas-server-support-sleuth", version: "${project.'cas.version'}", changing: true
    // implementation group: "org.apereo.cas", name: "cas-server-support-discovery-profile", version: "${project.'cas.version'}", changing: true
    implementation group: "org.apereo.cas", name: "cas-server-support-eureka-client", version: "${project.'cas.version'}", changing: true
    implementation group: "org.apereo.cas", name: "cas-server-support-rest", version: "${project.'cas.version'}", changing: true
    // implementation group: "org.apereo.cas", name: "cas-server-support-reports", version: "${project.'cas.version'}", changing: true
    // implementation group: "org.apereo.cas", name: "cas-server-support-metrics", version: "${project.'cas.version'}", changing: true
}
